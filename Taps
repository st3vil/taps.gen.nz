#!/usr/bin/env perl

use Mojolicious::Lite;

use DBI;
my $dbh = DBI->connect('dbi:Pg:dbname=taps') or die $!;
my $select_taps_in_bounds = $dbh->prepare(q {
    SELECT tid, lat, lng FROM tap_loc
    WHERE lat <= ? AND lat >= ?
      AND lng <= ? AND lng >= ?
});
my $insert_new_tap = $dbh->prepare(q {
    INSERT INTO tap_loc (lat, lng) VALUES (?, ?)
    RETURNING tid
});
my $insert_tap_details = $dbh->prepare(q {
    INSERT INTO tap_details (tid, title, comment) VALUES (?, ?, ?)
});
my $select_tap_details = $dbh->prepare(q {
    SELECT tid, title, comment FROM tap_details
    WHERE tid = ?
});

get '/' => 'index';

get '/get_taps_in_bounds' => sub {
    my $self = shift;
    my $bounds = $self->param("bounds");
    my ($ne_lat, $ne_lng, $sw_lat, $sw_lng) = $bounds =~ m{ \A
        ( -?\d+\.?\d* ) ,
        ( -?\d+\.?\d* ) \t
        ( -?\d+\.?\d* ) ,
        ( -?\d+\.?\d* )
        \Z }xs;

    $self->app->log->debug("Params: NE: $ne_lat, $ne_lng SW: $sw_lat, $sw_lng");
    
    $select_taps_in_bounds->execute(
        $ne_lat, $sw_lat,
        $ne_lng, $sw_lng
    );
    my $taps = $select_taps_in_bounds->fetchall_hashref("tid");
    $self->app->log->debug("taps:\n".join("\n",
        map { join("\t", values %$_) } values %$taps));
    $self->render_json($taps);
};

get '/tap_details' => sub {
    my $self = shift;
    my $tid = $self->param("tid");

    $select_tap_details->execute($tid);
    my $tap = $select_tap_details->fetchrow_hashref;
    if (!$tap) {
        $tap = { title => undef };
    }
    $self->render_json($tap);
};

get '/edit_tap_details' => sub {
    my $self = shift;
    my $tid = $self->param("tid");


    $select_tap_details->execute($tid);
    my $tap = $select_tap_details->fetchrow_hashref;
    $self->render_json($tap);
};

get '/create_tap' => sub {
    my $self = shift;
    my $lat = $self->param("lat");
    my $lng = $self->param("lng");
    my $tid = $insert_new_tap->execute($lat, $lng);

    my $comment = $self->param("comment");
    $insert_tap_details->execute($tid, $comment);

    $self->render_json({tid => $tid});
};

app->start;
__DATA__
